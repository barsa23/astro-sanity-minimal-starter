---
// Component Imports
import BaseLayout from '../layouts/BaseLayout.astro'
import BlogPostPreview from '../components/astro/BlogPostPreview.astro';

// Component Script:
// You can write any JavaScript/TypeScript that you'd like here.
// It will run during the build, but never in the browser.
// All variables are available to use in the HTML template below.
let title = 'Example Blog';
let description = 'This is the repo for the Sanity and Astro starter project';
let permalink = 'https://example.com/blog/';

// collection
// import authorData from '../data/authors.json';
export function createCollection() {
  return {
    route: `/blog/:page?`,
    paginate: true,
    async props({ paginate }) {
      /* Fetch all markdown posts */
      let allPosts = Astro.fetchContent('./blog/*.md');
      allPosts = allPosts.sort((a, b) => new Date(b.publishDate) - new Date(a.publishDate));
      return {
        posts: paginate(allPosts, {pageSize: 100})
      }
    },
     /** Generate RSS feed (only for main /posts/ feed) */
    rss: {
      title: 'Example Blog',
      description: 'Example Blog',
      item: (item) => ({
        title: item.title,
        description: item.description,
        link: item.url,
        pubDate: item.date,
      }),
    }
  };
}

const { posts } = Astro.props;
---
<!DOCTYPE html>
<BaseLayout title={title} description={description} permalink={permalink} canonicalURL={Astro.request.canonicalURL.href}>
  <article class="blog-page-content__article">
    <section class="postlist">
      {posts.data.map(post => <BlogPostPreview post={post} />)}
    </section>
  </article>
</BaseLayout>

<style>
 /* Posts list */
  .postlist {
    margin-top: 2rem;
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: 2rem;
    list-style: none;
    padding: 0;
  
  }
  .postlist-item {
    display: flex;
    flex-direction: column;
  }
  
  .postlist-item__img {
    border-radius: 0.5rem;
    height: auto;
  }
    
  @media screen and (max-width: 769px) {
    .blog-page-content__article {
      padding: 1rem;
    }
    .postlist {
      grid-template-columns: 1fr;
    }
  }
</style>